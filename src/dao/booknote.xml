<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
    PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"    "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="book.note">
        <resultMap id="booktypeMap" type="booktype">
           <id column="type_no" property="id"/>
           <result column="type_dsc" property="name"/>
           <result column="parent_type_no" property="parentTypeNo" typeHandler="dao.ParentTypeConveter"/>
           <result column="show" property="show"/>
        </resultMap>
       <resultMap id="booknoteMap" type="booknote">
           <id column="id" property="id"/>
           <result column="title" property="title"/>
           <result column="content" property="content"/>
           <result column="tim" property="ts"/>
           <result column="type_no" property="typeId"/>
           <!--<association column="type_no" property="test" javaType="booktype" resultMap="booktypeMap" >-->
               <!---->
           <!--</association>-->
       </resultMap>

     <select  id="findByTypeTitle"  parameterType="map" resultMap="booknoteMap">
         select
             b.*,
             bt.type_no as "type.id" ,
             bt.type_dsc "type.name",
             bt.show "type.show",
             bt.del "type.del"
         from
            book b,book_type bt
         where
             b.type_no=bt.type_no
             and bt.del=0
             and b.del=0
             <if test="typeNos!=null">
                 and b.type_no in (
                  <foreach collection="typeNos" item="t" separator=",">
                      #{t.id}
                 </foreach>
                 )
             </if>
             <foreach collection="keys" item="key">
                 and lower(title) like #{key}
             </foreach>
             <choose >
                 <when test="typeNo>0">
                     order by bt.show desc, b.id
                 </when>
                 <otherwise>
                     order by b.type_no,bt.show desc,b.id
                 </otherwise>
             </choose>
     </select>

    <select id="findByTypeTitleContent"  parameterType="map" resultMap="booknoteMap">
          select
             b.*,
             bt.type_no as "type.id" ,
             bt.type_dsc "type.name",
             bt.show "type.show",
             bt.del "type.del"
          from
               book b,book_type bt
          where
              b.type_no=bt.type_no
              and bt.del=0
              and b.del=0
              <if test="typeNos!=null">
                 and b.type_no in (
                  <foreach collection="typeNos" item="t" separator=",">
                      #{t.id}
                 </foreach>
                 )
             </if>

             <if test="keys!=null">
                  and ((
                 <foreach collection="keys" item="key"  separator="and" >
                         lower(title) like #{key}
                 </foreach>
                 ) or (
                  <foreach collection="keys" item="key"  separator="and" >
                         lower(content) like #{key}  
                 </foreach>
                 ))
            </if>
          <choose >
                 <when test="typeNo>0">
                     order by bt.show desc, b.id
                 </when>
                 <otherwise>
                     order by bt.show desc,b.type_no,b.id
                 </otherwise>
             </choose>
        </select>

    <delete id="deepDeleteByType" parameterType="int">
          delete from book where type_no=#{id}
    </delete>

    <update id="update" parameterType="map">
        update book
        <set>
            <if test="typeNo!=null">type_no=#{typeNo},</if>
            <if test="title!=null">title=#{title}</if>
        </set>
        where
            id=#{id}

    </update>

    <insert id="insert" parameterType="booknote">
        <selectKey keyProperty="id" order="BEFORE" resultType="int">
            select max(id)+1 id from book
        </selectKey>
          insert into book(id,title,content,tim,type_no,del)
          values (#{id},#{title},#{content},#{ts},#{typeId},0)
    </insert>
</mapper>


